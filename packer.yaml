---
builders:
  - type: 'arm-image'
    iso_checksum_type: 'sha256'
    iso_target_extension: 'img'
    output_filename: 'build/raspberry_pi.img'
    image_type: 'raspberrypi'
    target_image_size: '{{user `target_image_size`}}'
    qemu_binary: 'qemu/arm-linux-user/qemu-arm-static'

    # TODO: Point `iso_url` and `iso_checksum_url` to HTTPS URLs instead of local files.
    iso_url: 'file::build/raspian.zip'
    iso_checksum_url: 'file::build/raspian.zip.sha256'
provisioners:
  - type: 'shell'
    inline:
      - 'HOSTNAME=$(cat /etc/hostname)'
      - 'echo {{user `hostname`}} > /etc/hostname'

      # TODO: Make `sed` fail on no match, see https://stackoverflow.com/questions/15965073/return-code-of-sed-for-no-match.
      - 'sed --expression "s/^\\(127\\.0\\.1\\.1\\s\\+\\)${HOSTNAME}$/\\1{{user `hostname`}}/g" --in-place /etc/hosts'
    inline_shebang: &shebang '/bin/sh -eux'

  # Change timezone.
  - type: 'shell'
    inline:
      - 'test -f /usr/share/zoneinfo/{{user `timezone`}}'
      - 'rm /etc/localtime'
      - 'echo {{user `timezone`}} > /etc/timezone'
      - 'dpkg-reconfigure --frontend noninteractive tzdata'
    inline_shebang: *shebang
    environment_vars: &env
      - 'LC_ALL=C'

  # Enable SSH.
  - type: 'shell'
    inline:
      - 'touch /boot/ssh'
    inline_shebang: *shebang

  # Configure Wi-Fi.
  - type: 'shell'
    inline:
      - 'wpa_passphrase "{{user `wifi_name`}}" "{{user `wifi_password`}}" >> /etc/wpa_supplicant/wpa_supplicant.conf'
    inline_shebang: *shebang

  # Disable Debian changelogs.
  - type: 'shell'
    inline:
      - 'rm /etc/apt/apt.conf.d/20listchanges'
      - 'apt-get remove --quiet --yes --purge apt-listchanges'
    inline_shebang: *shebang
    environment_vars: *env

  # Upgrade system packages.
  - type: 'shell'
    inline:
      - 'apt-get --quiet update'
      - 'apt-get --quiet --yes upgrade'
      - 'apt-get --quiet --yes dist-upgrade'
    inline_shebang: *shebang
    environment_vars: *env

  # Install Docker.
  - type: 'shell'
    inline:
      - 'curl --fail --location --show-error --silent https://get.docker.com | sh'
      - 'usermod --append --groups docker pi'
    inline_shebang: *shebang
    environment_vars: *env

  # Install Kubernetes.
  - type: 'shell'
    inline:
      # Disable swap.
      # TODO: I'm not sure if this is working (according to the output from `swapon --summary`).
      - 'dphys-swapfile swapoff'
      - 'dphys-swapfile uninstall'
      - 'systemctl disable dphys-swapfile'

      # Enable cgroups.
      - "sed --expression 's/$/ cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory/' --in-place /boot/cmdline.txt"

      # Install Kubernetes.
      - 'curl --fail --show-error --silent https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -'
      - 'echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list'
      - 'apt-get --quiet update'
      - 'apt-get --no-install-recommends --quiet --yes install kubeadm kubectl kubelet'
    inline_shebang: *shebang
    environment_vars: *env

  # Cleanup.
  - type: 'shell'
    inline:
      - 'apt-get --quiet --yes --option Apt::AutoRemove::SuggestsImportant=false autoremove'
      - 'apt-get --quiet clean'
      - 'rm --force --recursive /var/lib/apt/lists/*'
    inline_shebang: *shebang
    environment_vars: *env
variables:
  hostname: 'raspberrypi'
  timezone: 'Australia/Sydney'
  wifi_name: null
  wifi_password: null

  # TODO: Check this.
  target_image_size: '34359738368'
sensitive-variables:
  - 'wifi_password'
