---
builders:
  - type: 'arm-image'
    iso_url: '{{user `iso_url`}}'
    iso_checksum_url: '{{user `iso_url`}}.sha256'
    iso_checksum_type: 'sha256'
    output_directory: 'build'
    target_image_size: '{{user `target_image_size`}}'
provisioners:
  # Upgrade system packages
  - type: 'shell'
    inline:
      - 'apt-get update'
      - 'apt-get --yes upgrade'
      - 'apt-get --yes dist-upgrade'
      - 'apt-get --yes auto-remove'
      - 'apt-get clean'
    environment_vars:
      - 'LANG='
      - 'LANGUAGE='

  - type: 'shell'
    inline:
      - 'HOSTNAME=$(cat /etc/hostname)'
      - 'echo {{user `hostname`}} > /etc/hostname'
      - 'sed --expression "s/^127\\.0\\.1\\.1\\s\\+${HOSTNAME}$/127.0.1.1\t{{user `hostname`}}/g" --in-place /etc/hosts'

  # Change timezone
  - type: 'shell'
    inline:
      - 'test -f /usr/share/zoneinfo/{{user `timezone`}}'
      - 'ln --force --symbolic /usr/share/zoneinfo/{{user `timezone`}} /etc/localtime'
      - 'echo {{user `timezone`}} > /etc/timezone'
      - 'dpkg-reconfigure --frontend noninteractive tzdata'
    environment_vars:
      - 'LANG='
      - 'LANGUAGE='

  # Enable SSH
  - type: 'shell'
    inline:
      - 'touch /boot/ssh'

  # Configure Wi-Fi
  - type: 'shell'
    inline:
      - 'wpa_passphrase "{{user `wifi_name`}}" "{{user `wifi_password`}}" >> /etc/wpa_supplicant/wpa_supplicant.conf'

  # Install Docker
  - type: 'shell'
    inline:
      - 'curl --fail --location --show-error --silent https://get.docker.com | sh'
      - 'usermod --append --groups docker pi'
    environment_vars:
      - 'LANG='
      - 'LANGUAGE='

  # Install Kubernetes
  - type: 'shell'
    inline:
      - 'curl --fail --show-error --silent https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -'
      - 'echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list'
      - 'apt-get update'
      - 'apt-get --yes install --no-install-recommends kubeadm kubectl'

  - type: 'shell'
    inline:
      # Disable swap
      - dphys-swapfile swapoff
      - dphys-swapfile uninstall
      - systemctl disable dphys-swapfile

      # Enable cgroups
      - "sed --expression 's/$/ cgroup_enable=cpuset cgroup_enable=memory/' --in-place /boot/cmdline.txt"
variables:
  hostname: 'raspberrypi'
  iso_url: 'https://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2019-07-12/2019-07-10-raspbian-buster-lite.zip'
  target_image_size: '34359738368'
  timezone: 'Australia/Sydney'
  wifi_name: null
  wifi_password: null
sensitive-variables:
  - 'wifi_password'


