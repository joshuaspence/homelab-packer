---
builders:
  - type: 'arm-image'
    iso_checksum_type: 'sha256'
    iso_target_extension: 'img'
    output_filename: 'build/raspberry_pi.img'
    image_type: 'raspberrypi'
    target_image_size: '4294967296'

    # TODO: Point `iso_url` and `iso_checksum_url` to HTTPS URLs instead of local files.
    iso_url: 'file::build/raspian.zip'
    iso_checksum_url: 'file::build/raspian.zip.sha256'

provisioners:
  # Set hostname on boot.
  - type: 'file'
    source: 'files/hosts'
    destination: '/etc/hosts'
  - type: 'file'
    source: 'files/hostname.service'
    destination: '/lib/systemd/system/raspberrypi-hostname.service'
  - type: 'shell'
    inline:
      - 'systemctl enable raspberrypi-hostname.service'
    inline_shebang: &shebang '/bin/sh -eux'

  # Change timezone.
  - type: 'shell'
    inline:
      - 'test -f /usr/share/zoneinfo/{{user `timezone`}}'
      - 'rm /etc/localtime'
      - 'echo {{user `timezone`}} > /etc/timezone'
      - 'dpkg-reconfigure --frontend noninteractive tzdata'
    inline_shebang: *shebang
    environment_vars: &env
      - 'APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1'
      - 'LC_ALL=C'

  # Enable SSH.
  - type: 'shell'
    inline:
      - 'systemctl enable ssh.service'
      - 'systemctl disable sshswitch.service'
    inline_shebang: *shebang
    environment_vars: *env

  # Configure Wi-Fi.
  - type: 'shell'
    inline:
      - "[ -n '{{user `wifi_name`}}' -a -n '{{user `wifi_password`}}' ] || exit 0"
      - "echo 'country={{user `wifi_country`}}' >> /etc/wpa_supplicant/wpa_supplicant.conf"
      - "wpa_passphrase '{{user `wifi_name`}}' '{{user `wifi_password`}}' | grep --extended-regexp --invert-match '^\\s+#psk=' >> /etc/wpa_supplicant/wpa_supplicant.conf"
    inline_shebang: *shebang
  - type: 'shell'
    inline:
      - 'apt-get remove --quiet --yes --purge raspberrypi-net-mods'
    inline_shebang: *shebang
    environment_vars: *env

  # Disable Debian changelogs.
  - type: 'shell'
    inline:
      - 'rm /etc/apt/apt.conf.d/20listchanges'
    inline_shebang: *shebang

  # Upgrade system packages.
  - type: 'shell'
    inline:
      - 'apt-get --quiet update'
      - 'apt-get --quiet --yes --with-new-pkgs upgrade'
      - 'apt-get --quiet --yes dist-upgrade'
    inline_shebang: *shebang
    environment_vars: *env

  # Install Docker.
  - type: 'shell'
    inline:
      - 'curl --fail --location --show-error --silent https://get.docker.com | sh'
      - 'usermod --append --groups docker pi'
    inline_shebang: *shebang
    environment_vars: *env

  # Install Kubernetes.
  - type: 'shell'
    inline:
      # Disable swap.
      # TODO: I'm not sure if this is working (according to the output from `swapon --summary`).
      - 'dphys-swapfile swapoff'
      - 'dphys-swapfile uninstall'
      - 'systemctl disable dphys-swapfile'

      # Enable cgroups.
      - "sed --expression 's/$/ cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory/' --in-place /boot/cmdline.txt"

      # Install Kubernetes.
      - 'curl --fail --show-error --silent https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -'
      - "echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list"
      - 'apt-get --quiet update'
      - 'apt-get --no-install-recommends --quiet --yes install kubeadm kubectl kubelet'
    inline_shebang: *shebang
    environment_vars: *env

  # Cleanup.
  - type: 'shell'
    inline:
      - 'apt-get --quiet --yes --option Apt::AutoRemove::SuggestsImportant=false autoremove'
      - 'apt-get --quiet clean'
      - 'rm --force --recursive /var/lib/apt/lists/*'
    inline_shebang: *shebang
    environment_vars: *env
  - type: 'shell'
    inline:
      - 'find /var/log -type f -print0 | xargs --null truncate --size=0'
    inline_shebang: *shebang
  - type: 'shell'
    inline:
      - 'rm --force /etc/passwd- /etc/group- /etc/shadow- /etc/gshadow- /etc/subuid- /etc/subgid-'
      - 'rm --force /etc/apt/sources.list~ /etc/apt/trusted.gpg~'
      - 'rm --force /var/cache/debconf/*-old /var/lib/dpkg/*-old'

      # TODO: Do we need this?
      - 'true > /etc/machine-id'
    inline_shebang: *shebang

variables:
  timezone: 'Australia/Sydney'
  wifi_country: 'AU'
  wifi_name: ''
  wifi_password: ''
sensitive-variables:
  - 'wifi_password'

min_packer_version: '1.4.5'
